dist: trusty
sudo: false
language: python
python: "2.7"
env:
  - TOX_ENV=py35 GALAXY_VERSION=dev
  - TOX_ENV=py34 GALAXY_VERSION=dev
  - TOX_ENV=py27 GALAXY_VERSION=dev
  - TOX_ENV=py27 GALAXY_VERSION=release_17.05
  - TOX_ENV=py27 GALAXY_VERSION=release_17.01
  - TOX_ENV=py27 GALAXY_VERSION=release_16.10
  - TOX_ENV=py27 GALAXY_VERSION=release_16.07
  - TOX_ENV=py27 GALAXY_VERSION=release_16.04
  - TOX_ENV=py27 GALAXY_VERSION=release_16.01
  - TOX_ENV=py27 GALAXY_VERSION=release_15.10
  - TOX_ENV=py27 GALAXY_VERSION=release_15.07
  - TOX_ENV=py27 GALAXY_VERSION=release_15.05
  - TOX_ENV=py27 GALAXY_VERSION=release_15.03
  - TOX_ENV=py27 GALAXY_VERSION=release_15.01
  - TOX_ENV=py27 GALAXY_VERSION=release_14.10

matrix:
  include:
    - python: "2.7"
      env: TOX_ENV=py36 GALAXY_VERSION=dev
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - python3.6-dev
    - python: "2.7"
      env: TOX_ENV=py33 GALAXY_VERSION=dev
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - python3.3-dev
    - python: "2.7"
      env: TOX_ENV=py26 GALAXY_VERSION=dev
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - python2.6-dev

install:
  - python setup.py install
  - cp run_galaxy.sh $HOME
  - pip install "tox>=1.8.0"

before_script:
  # Install Galaxy
  - cd $HOME
  - wget https://github.com/galaxyproject/galaxy/archive/${GALAXY_VERSION}.tar.gz
  - tar xvzf ${GALAXY_VERSION}.tar.gz | tail
  # Releases/dev branch are named differently
  - cd galaxy-${GALAXY_VERSION}/
  # Create a PostgreSQL database for Galaxy. The default SQLite3 database makes test fail randomly because of "database locked" error.
  - createdb -U postgres galaxy-travis
  - if [ -f universe_wsgi.ini.sample ]; then GALAXY_CONFIG_FILE=universe_wsgi.ini; else GALAXY_CONFIG_FILE=config/galaxy.ini; fi
  - if [ -f universe_wsgi.ini.sample ]; then GALAXY_CONFIG_DIR=.; else GALAXY_CONFIG_DIR=config; fi
  # Change Galaxy configuration to use the newly created PostgreSQL database
  - sed -e 's|^#database_connection.*|database_connection = postgresql://postgres:@localhost/galaxy-travis|' $GALAXY_CONFIG_FILE.sample > $GALAXY_CONFIG_FILE
  # Setup Galaxy master API key and admin user
  - export BIOBLEND_GALAXY_MASTER_API_KEY=$(cat /dev/urandom | LC_ALL=C tr -dc A-Za-z0-9 | head -c 32)
  - export BIOBLEND_GALAXY_USER_EMAIL=${USER}@localhost.localdomain
  - sed -i.bak -e "s/^#master_api_key.*/master_api_key = $BIOBLEND_GALAXY_MASTER_API_KEY/" -e "s/^#admin_users.*/admin_users = $BIOBLEND_GALAXY_USER_EMAIL/" $GALAXY_CONFIG_FILE
  # Change Galaxy configuration needed by many tests
  - sed -i.bak -e 's/^#allow_user_dataset_purge.*/allow_user_dataset_purge = True/' $GALAXY_CONFIG_FILE
  # Change Galaxy configuration needed by some library tests
  - sed -i.bak -e 's/^#allow_.*path_paste.*/allow_library_path_paste = True/' $GALAXY_CONFIG_FILE
  # Change Galaxy configuration needed by some tool tests
  - sed -i.bak -e 's/^#conda_auto_init.*/conda_auto_init = True/' $GALAXY_CONFIG_FILE
  # Change Galaxy configuration needed by some workflow tests
  - sed -i.bak -e 's/^#enable_beta_workflow_modules.*/enable_beta_workflow_modules = True/' $GALAXY_CONFIG_FILE
  # Change Galaxy configuration needed by some user tests
  - sed -i.bak -e 's/^#allow_user_deletion.*/allow_user_deletion = True/' $GALAXY_CONFIG_FILE
  # Change Galaxy configuration needed by quota tests
  - sed -i.bak -e 's/^#enable_quotas.*/enable_quotas = True/' $GALAXY_CONFIG_FILE
  # Update kombu requirement (and its dependency amqp) to a version compatible with Python 2.7.11, see https://github.com/celery/kombu/pull/540
  - if [ -f eggs.ini ]; then sed -i.bak -e 's/^kombu = .*$/kombu = 3.0.30/' -e 's/^amqp = .*$/amqp = 1.4.8/' eggs.ini; fi
  # Add "cat" tool to the toolbox
  - if [ -f test/functional/tools/samples_tool_conf.xml ]; then sed -i.bak -e "s/^#tool_config_file.*/tool_config_file = $GALAXY_CONFIG_DIR\/tool_conf.xml.sample,$GALAXY_CONFIG_DIR\/shed_tool_conf.xml.sample,test\/functional\/tools\/samples_tool_conf.xml/" $GALAXY_CONFIG_FILE; fi
  # Start Galaxy and wait for successful server start
  - GALAXY_RUN_ALL=1 ../run_galaxy.sh --daemon --wait
  - export BIOBLEND_GALAXY_URL=http://localhost:8080

script:
  # Run nosetests through setuptools, so it will install test depedencies
  - cd $TRAVIS_BUILD_DIR && tox -e $TOX_ENV
